#!/bin/bash -e
# The dopatch job uses the same defs file as the patch job
#RCCONFIG:RCDEFSNAME=patch
#RCREQVARS="ADMINMAIL PATCHHOST CONTACT"
#RCOPTVARS="TEST"
#RCREQDEFS="POSTPATCHSUBJECT POSTPATCHMESSAGE"
# Variable specifications for user-supplied (not configured in a .defs file)
# vars. Format: #VARNAME:<pcre match regex>:(default value):<description>
#ADMINMAIL:^[a-z_\d\.-]+\@[\da-z\.-]+\.[a-z\.]{2,6}$::From address on notifications, address to send sysadmin reports to
#CONTACT:^[a-z_\d\.-]+\@[\da-z\.-]+\.[a-z\.]{2,6}$::Contact for the host that receives notifications
#PATCHHOST:[\da-z\.-]+::The host to be patched
#TEST:false|true:false:Set "true" to tee logfile to stdout

# Use jobapi to check vars
processvars

LOG=$(mktemp /tmp/patch-XXXXXX.log)
cleanup(){
	if [ -e $LOG ]
	then
		mail -r $ADMINMAIL -s "ERROR from patch script for $PATCHHOST, see log" $ADMINMAIL < $LOG
		rm -f $LOG
	fi
}
trap 'cleanup' EXIT

if [ "$TEST" = "true" ]
then
	exec |& tee $LOG
else
	exec &> $LOG
fi

OLDOSVER=$(rccmd "cat /etc/system-release" $PATCHHOST 2>/dev/null) || OSVER="error"
OLDKERNELVER=$(rccmd "uname -srv" $PATCHHOST 2>/dev/null) || KERNELVER="error"
status "Calling yumupdate -r for $PATCHHOST"
if rcdo yumupdate -r $PATCHHOST
then
	status "Patching succeeded, sleeping 2 minutes for host to complete reboot"
	sleep 2m
	# Check the log output from yum and update the subject if needed.
	MAILSUBJECT="Patching succeeded for $PATCHHOST"
	grep -qi 'warning\|error' $LOG && MAILSUBJECT="Warning(s)/Error(s) while patching $PATCHHOST"
	for TRY in {1..10}
	do
		status "trying to ping $PATCHHOST"
		rcdo ping $PATCHHOST && break || :
		if [ $TRY -eq 10 ]
		then
			mail -r $ADMINMAIL -s "FAILED patching of $PATCHHOST, didn't return after reboot" $ADMINMAIL < $LOG
			rm -f $LOG
			exit 1
		fi
		echo "Host not awake after $TRY tries, sleeping 1 minute and trying again..."
		sleep 1m
	done
	echo "$PATCHHOST is awake"
	status "Sending notifications"
	OSVER=$(rccmd "cat /etc/system-release" $PATCHHOST 2>/dev/null) || OSVER="error"
	KERNELVER=$(rccmd "uname -srv" $PATCHHOST 2>/dev/null) || KERNELVER="error"
	eval POSTPATCHSUBJECT=\""$POSTPATCHSUBJECT"\"
	# Several hoops to jump through to expand things the way we want...
	eval POSTPATCHMESSAGE=\""$POSTPATCHMESSAGE"\"
	mail -r $ADMINMAIL -s "$POSTPATCHSUBJECT" $CONTACT <<<"$POSTPATCHMESSAGE"
	echo "Done"
	mail -r $ADMINMAIL -s "$MAILSUBJECT" $ADMINMAIL < $LOG
else
	status "Patch/reboot failed, sending notify to sysadmin"
	mail -r $ADMINMAIL -s "FAILED patching on $PATCHHOST" $ADMINMAIL < $LOG
fi
rm -f $LOG
